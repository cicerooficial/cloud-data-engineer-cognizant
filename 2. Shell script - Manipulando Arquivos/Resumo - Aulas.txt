O que é shell Script?

Shell em código é uma interface de usuário para acessar os serviços de um sistema operacional.
É uma forma de comunicar com o Kernel do sistema.
Você pode acessar o Shell atravês de comandos ou Interface Gráficos.
Mas no Linux comunicado os comandos (famosa tela preta).

O que é Script?
Script é uma linguagem de programação que executa nenhum sistema de tempo de execução, muito ultilizado para automação.
No universio Unix, que é um sistema operacional, aonde o Linux foi baseado, lembrando que o Linux não é Unix Original, mas um construção feita zero baseado no Unix.
Exitem várias linguagem de script para Shell. o mas ultilizado e o Bash e Sh, neste tutorial vamos ultilizar o Bash pois é o mais popular no Linux.

Comandos:
Na computação antiga, não tinha muito recurso de memória, por isso os comandos são reduzidos.

Man - Pesquisa sobre o que faz aquele comando

man <comando>

(cd - change directory) - Alterando entre diretórios com 
cd /: Abre o diretório raiz do sistema.
cd ~: Abre o diretório do usuário corrente. O usuário logado naquele instante.
cd ...: Volta diretório

(ls, ls -l, ls -a, ls -s) - Listando arquivos
ls - Lista o conteúdo
ls -l: Lista conteúdo em colunas detalahada
ls -a: Lista conteúdo até os arquivos ocultos
ls -s: Lista conteúdo com tamanho alocado de cada arquivo, em bloco.

(touch) - Criar e atualizar o conteudo de um arquivo 
touch file_name1.txt file_name2.txt ... Criar Múltiplos Arquivos
touch -a file_name.txt: Alterar hora de acesso
touch -m file_name.txt: Altera hora da modificação
touch -c file_name.txt: Altera hora de acesso sem criar um novo arquivo
touch -t 202012081047.30 file_name.txt: Definir hora específica de acesso e modificação usando o touch

CCYYMMDDhhmm.ss
CC: Os dois primeiros dígitos do ano.
YY: Os dois dígitos subsequêntes do ano.
MM: O mês.
DD: O dia.
hh: A hora.
mm: Os minutos.
ss: Os segundos.


(cat - concatenate) - Visualizar conteudo do arquivo 
É possível Criar arquivos, Unir arquivos e Exibir arquivos

Colocar o resultado em um outro arquivo. cat arq1.txt > arq_final.txt
*redirecionador de saída >

*Para parar a rolagem da tela e permitir a navegação uso o pipe | 
more ou less


(mv) - Mover arquivos
mv - Move arquivos e diretórios e renomeia arquivos e diretórios.
-i: Confirme antes de substituir caso o arquivo já exista no diretório
-n: Sem substituição caso o arquivo já exista no diretório
-b: Substituindo pelo backup
-u: Substitua se o arquivo de destino for antigo ou não existir

Ex: mv arquivo1.txt /diretório

(cp) - Copiar arquivos
-i: Confirma antes de substituir se o arquivo já existir no diretório
-v: Especifica o destino que o arquivo foi enviado
-l: Criar hard links em vez de copiar os arquivos
-s: Criar links simbólicos em vez de copiar arquivos
-u: Copiar apenas quando o arquivo de origem for mais novo do que o arquivo de destino ou quando o arquivo de destino não existir


(mkdir) - Criando diretórios 
mkdir nomedoDiretorio

(rm) - Remover arquivos 
rm arquivo1.txt
rm -r nomedoDiretorio
-f: Remove sem perguntar

(find) - Procurar por arquivos 
find <diretorio> (./ diretório atual)
-type f (tipo de arquivo f-file)
-type d (tipo de diretório d-directory)
-name "o" (arquivo com nome exato entre "")
-name "o*" (arquivo que inicia com (letra/palavra) + qualquer coisa no final)
-name "*o" (arquivo que finaliza com (letra/palavra) + qualquer coisa no inicio)
-name ".*" (arquivo oculto)

Ex: find ./ -type d -name "meu*"

(diff) - Comparar diferença entre arquivos 
diff arquivo1.txt arquivo2.txt
* Se os arquivos forem iguais, não mostrará nenhum resultado. 

​​(rmdir) - Remover diretorio vazio 
rmdir <nomedoDiretório> - Remover diretório vazio
rm -rf <nomedoDiretório> - Remover diretorios não vazios 


(env) - Trabalhando com variáveis de ambiente
env - Lista variáveis de ambiente
PS1: Prompt da linha de comandos
HOME: Diretório "/home" de um usuário
PATH: Lista de diretórios vasculhados quando um comando é executado

